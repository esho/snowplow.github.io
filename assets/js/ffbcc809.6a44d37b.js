"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[99873],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>g});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),u=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(r),g=i,m=d["".concat(c,".").concat(g)]||d[g]||s[g]||o;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function g(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=r.length,a=new Array(o);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,a[1]=l;for(var u=2;u<o;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},45485:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>s,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var n=r(87462),i=(r(67294),r(3905));const o={title:"Utilities",date:"2020-02-26",sidebar_position:90},a=void 0,l={unversionedId:"migrated/collecting-data/collecting-from-own-applications/unity-tracker/utilities/index",id:"migrated/collecting-data/collecting-from-own-applications/unity-tracker/utilities/index",title:"Utilities",description:"Utilities",source:"@site/docs/migrated/collecting-data/collecting-from-own-applications/unity-tracker/utilities/index.md",sourceDirName:"migrated/collecting-data/collecting-from-own-applications/unity-tracker/utilities",slug:"/migrated/collecting-data/collecting-from-own-applications/unity-tracker/utilities/",permalink:"/docsite-poc.github.io/docs/migrated/collecting-data/collecting-from-own-applications/unity-tracker/utilities/",draft:!1,tags:[],version:"current",lastUpdatedAt:1660568250,formattedLastUpdatedAt:"Aug 15, 2022",sidebarPosition:90,frontMatter:{title:"Utilities",date:"2020-02-26",sidebar_position:90},sidebar:"tutorialSidebar",previous:{title:"Event tracking",permalink:"/docsite-poc.github.io/docs/migrated/collecting-data/collecting-from-own-applications/unity-tracker/event-tracking/"},next:{title:"Tracking CLI",permalink:"/docsite-poc.github.io/docs/migrated/collecting-data/collecting-from-own-applications/snowplow-tracking-cli/"}},c={},u=[{value:"Utilities",id:"utilities",level:2},{value:"Log",id:"log",level:3},{value:"8.2 ConcurrentQueue",id:"82-concurrentqueue",level:3}],p={toc:u};function s(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"utilities"},"Utilities"),(0,i.kt)("p",null,"The Tracker also provides several extra utilities that can be used."),(0,i.kt)("h3",{id:"log"},"Log"),(0,i.kt)("p",null,"There is a custom logging wrapper which allows you to control the level of Tracker logging that occurs. You can set the level via:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"Log.SetLogLevel({0,1,2 or 3});\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0"),"\xa0: Turns of all logging"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"1"),"\xa0: Error only"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"2"),"\xa0: Error and Debug"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"3"),"\xa0: Error, Debug and Verbose")),(0,i.kt)("h3",{id:"82-concurrentqueue"},(0,i.kt)("a",{parentName:"h3",href:"https://github.com/snowplow/snowplow/wiki/Unity-Tracker#82-concurrentqueue"}),"8.2 ConcurrentQueue"),(0,i.kt)("p",null,"Due to the .NET 2.0 limitations in earlier versions of the Snowplow Unity Tracker we have had to implement our own ThreadSafe queue which can be found in the following package:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"SnowplowTracker.Collections"))))}s.isMDXComponent=!0}}]);