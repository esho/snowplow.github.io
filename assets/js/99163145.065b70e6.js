"use strict";(self.webpackChunkdocsite_poc_github_io=self.webpackChunkdocsite_poc_github_io||[]).push([[6665],{3905:(e,o,n)=>{n.d(o,{Zo:()=>c,kt:()=>u});var t=n(67294);function r(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function a(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?a(Object(n),!0).forEach((function(o){r(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function s(e,o){if(null==e)return{};var n,t,r=function(e,o){if(null==e)return{};var n,t,r={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],o.indexOf(n)>=0||(r[n]=e[n]);return r}(e,o);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=t.createContext({}),p=function(e){var o=t.useContext(l),n=o;return e&&(n="function"==typeof e?e(o):i(i({},o),e)),n},c=function(e){var o=p(e.components);return t.createElement(l.Provider,{value:o},e.children)},d={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},f=t.forwardRef((function(e,o){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=p(n),u=r,w=f["".concat(l,".").concat(u)]||f[u]||d[u]||a;return n?t.createElement(w,i(i({ref:o},c),{},{components:n})):t.createElement(w,i({ref:o},c))}));function u(e,o){var n=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var l in o)hasOwnProperty.call(o,l)&&(s[l]=o[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}f.displayName="MDXCreateElement"},67692:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var t=n(87462),r=(n(67294),n(3905));const a={title:"Snowflake Loader",date:"2020-04-25",sidebar_position:200},i=void 0,s={unversionedId:"pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/index",id:"pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/index",title:"Snowflake Loader",description:"The Snowflake Loader consists of two independent applications:",source:"@site/docs/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/index.md",sourceDirName:"pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader",slug:"/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/",permalink:"/docs/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/",draft:!1,editUrl:"https://github.com/snowplow/snowplow.github.io/tree/main/docs/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/index.md",tags:[],version:"current",lastUpdatedAt:1661951716,formattedLastUpdatedAt:"Aug 31, 2022",sidebarPosition:200,frontMatter:{title:"Snowflake Loader",date:"2020-04-25",sidebar_position:200},sidebar:"tutorialSidebar",previous:{title:"R32 Upgrade Guide",permalink:"/docs/pipeline-components-and-applications/loaders-storage-targets/snowplow-rdb-loader-3-0-0/previous-versions/snowplow-rdb-loader/upgrade-guides/r32-upgrade-guide/"},next:{title:"Setup",permalink:"/docs/pipeline-components-and-applications/loaders-storage-targets/snowplow-snowflake-loader/setup/"}},l={},p=[],c={toc:p};function d(e){let{components:o,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},c,n,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The Snowflake Loader consists of two independent applications:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Snowplow Snowflake Transformer - Spark job responsible for transformning enriched events into Snowflake-compatible format"),(0,r.kt)("li",{parentName:"ul"},"Snowplow Snowflake Loader - CLI application responsible for loading Snowplow-compatible enriched events into Snowflake DB")),(0,r.kt)("p",null,'Both applications communicate through DynamoDB table, called "processing manifest" and used to maintain pipeline state. Both applications use same self-describing JSON configuration file of ',(0,r.kt)("a",{parentName:"p",href:"https://raw.githubusercontent.com/snowplow/iglu-central/master/schemas/com.snowplowanalytics.snowplow.storage/snowflake_config/jsonschema/1-0-3"},"schema")," ",(0,r.kt)("inlineCode",{parentName:"p"},"com.snowplowanalytics.snowplow.storage/snowflake_config/jsonschema/1-0-3"),", which contain both transformer- and loader-specific properties."),(0,r.kt)("p",null,"The Snowflake loader is publicly available since version 0.3.1."))}d.isMDXComponent=!0}}]);